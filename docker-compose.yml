version: '3.8'

services:
  # PostgreSQL Database - Primary data store
  postgres:
    image: postgres:15-alpine
    container_name: liberation_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: liberation_system
      POSTGRES_USER: liberation_user
      POSTGRES_PASSWORD: liberation_password
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - liberation_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U liberation_user -d liberation_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache - For session management and caching
  redis:
    image: redis:7-alpine
    container_name: liberation_redis
    restart: unless-stopped
    command: redis-server --requirepass liberation_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - liberation_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin - Database management interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: liberation_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@liberation.system
      PGADMIN_DEFAULT_PASSWORD: liberation_admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - liberation_network
    depends_on:
      - postgres

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: liberation_prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - liberation_network

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: liberation_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: liberation_grafana
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - liberation_network
    depends_on:
      - prometheus

  # Liberation System - Main application
  liberation-system:
    build: .
    container_name: liberation_system_app
    restart: unless-stopped
    environment:
      # Database configuration
      DATABASE_TYPE: postgresql
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: liberation_user
      POSTGRES_PASSWORD: liberation_password
      POSTGRES_DATABASE: liberation_system
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: liberation_redis_password
      
      # System configuration
      LIBERATION_MODE: development
      TRUST_LEVEL: maximum
      DEBUG_MODE: true
      
      # Theme configuration (dark neon)
      THEME_PRIMARY_COLOR: "#00ffff"
      THEME_SECONDARY_COLOR: "#ff00ff"
      THEME_ACCENT_COLOR: "#ffff00"
      THEME_BACKGROUND: "#000000"
      THEME_SURFACE: "#1a1a1a"
      THEME_TEXT: "#ffffff"
      
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    ports:
      - "8000:8000"
    networks:
      - liberation_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - app

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  liberation_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16
